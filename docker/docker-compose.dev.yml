# Development overrides for the Myaku stack.
#
# Uses the images tagged "dev" for each service.
# 
# The dev tagged version of the image for each service is built using the same
# Dockerfile as the prod versions, but the dev target is used instead of the
# prod target.
#
# The dev target builds the image expecting binds from the host to supply all
# needed files instead of copying the needed files directly into the image.
# This means changes to the host files are then automatically reflected in the
# service containers without having to rebuild images.
#
# The dev tagged images are not publicly published and must be built locally
# using build_image.sh. Run build_image.sh with no args for usage details.
#
# Run docker stack deploy passing both the docker-compose.yml file and this file
# as -f args to run the Myaku stack configured for development.

version: "3.7"
services:
  crawler:
    image: friedrice2/myaku_crawler:dev
    volumes:
      - type: volume
        source: crawler_devdata
        target: /crawler/devdata

      - type: bind
        source: ../myaku
        target: /crawler/src/myaku

      - type: bind
        source: ./myaku_crawler
        target: /crawler/src/scripts
    environment:
      KAKUYOMU_CRAWLER_PAGE_TO_CRAWL: 1
      DEBUG_LOG_MAX_SIZE: 0
      INFO_LOG_MAX_SIZE: 0
  rescore:
    image: friedrice2/myaku_rescore:dev
    volumes:
      - type: bind
        source: ../myaku
        target: /rescore/src/myaku
    environment:
      DEBUG_LOG_MAX_SIZE: 0
      INFO_LOG_MAX_SIZE: 0
  web:
    image: friedrice2/myaku_web:dev
    volumes:
      - type: bind
        source: ../myaku
        target: /myakuweb/src/myaku

      - type: bind
        source: ../myakuweb
        target: /myakuweb/src/myakuweb

      - type: bind
        source: ./myaku_web
        target: /myakuweb/src/scripts
    environment:
      DEBUG_LOG_MAX_SIZE: 0
      INFO_LOG_MAX_SIZE: 0

    # Needed so that you can attach to pdb running in the container when
    # debugging.
    stdin_open: true
    tty: true
  first-page-cache:
    image: friedrice2/myaku_redis.first-page-cache:dev
    volumes:
      - type: bind
        source: ./myaku_redis.first-page-cache
        target: /run_files
  reverseproxy:
    image: friedrice2/myaku_nginx.reverseproxy:dev
    volumes:
      - type: bind
        source: ./myaku_nginx.reverseproxy
        target: /run_files
      - type: bind
        source: ../myakuweb/static
        target: /www/static
    ports:
      - target: 80
        published: 8000
        protocol: tcp
        mode: host
  crawldb:
    image: friedrice2/myaku_mongo.crawldb:dev
    volumes:
      - type: bind
        source: ./myaku_mongo.crawldb/initdb.d
        target: /docker-entrypoint-initdb.d
      - type: bind
        source: ./myaku_mongo.crawldb/run_files
        target: /run_files
  crawldb_backup:
    image: friedrice2/mongobackup:dev
    volumes:
      - type: bind
        source: ./mongobackup
        target: /mongobackup/scripts

volumes:
  crawler_devdata:
