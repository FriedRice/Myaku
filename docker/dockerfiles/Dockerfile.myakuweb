# Builds a prod or dev image for Myaku web.

FROM ubuntu:18.04 AS base

# Set up deadsnakes ppa for installing newer Python versions
RUN apt-get update \
    && apt-get install -y software-properties-common \
    && add-apt-repository ppa:deadsnakes/ppa \
    && apt-get update

# Install needed python packages
RUN apt-get install -y python3.7 python3.7-dev python3-pip python3-gdbm

# Set python binary that should be used in the container
ENV PYTHON_BIN python3.7

# Get latest pip
RUN $PYTHON_BIN -m pip install -U pip

ENV MYAKUWEB_BASE_DIR /myakuweb
ENV MYAKUWEB_SRC_DIR $MYAKUWEB_BASE_DIR/src
ENV PYTHONPATH $PYTHONPATH:$MYAKUWEB_SRC_DIR

COPY ./requirements.txt $MYAKUWEB_SRC_DIR/
RUN $PYTHON_BIN -m pip install -r $MYAKUWEB_SRC_DIR/requirements.txt

ENV MYAKUWEB_LOG_DIR /myakuweb/log
VOLUME ["$MYAKUWEB_LOG_DIR"]

ENV MYAKUWEB_PROJECT_DIR $MYAKUWEB_SRC_DIR/myakuweb
WORKDIR $MYAKUWEB_PROJECT_DIR

ENV PYTHONUNBUFFERED 1

ENV MYAKUWEB_STATIC_URL /static
ENV MYAKUWEB_STATIC_ROOT $MYAKUWEB_BASE_DIR/static


FROM base AS dev

ENV IN_DEBUG_MODE 1

# Volume for sharing in development source on host with container.
VOLUME ["$MYAKUWEB_SRC_DIR"]

ENTRYPOINT ["python3.7", "manage.py", "runserver", "0.0.0.0:8000"]


FROM base AS prod

# gettext-base needed for envsubst used in run_myakuweb_nginx.sh
RUN apt-get install -y nginx gettext-base

# Copy all source code into the container.
COPY . $MYAKUWEB_SRC_DIR

ENV IN_DEBUG_MODE 1

ENV NGINX_CONF_TEMPLATE \
    $MYAKUWEB_PROJECT_DIR/prod_server_config/nginx_template.conf
ENV UWSGI_PARAMS_FILE $MYAKUWEB_PROJECT_DIR/prod_server_config/uwsgi_params
ENV UWSGI_SOCKET_FILE $MYAKUWEB_BASE_DIR/myakuweb_uwsgi.sock

ENV NGINX_LOG_DIR $MYAKUWEB_LOG_DIR/nginx

COPY ./docker/setup_scripts/run_myakuweb_nginx.sh /
ENTRYPOINT ["/bin/bash", "/run_myakuweb_nginx.sh"]
