# Makes routine data backups of a full MongoDB mongod instance.

FROM friedrice2/ubuntu.cron:1.0.1_18.04 AS base

# Needed packages for adding the official MongoDB repo to apt in the next step.
RUN apt-get update && apt-get install -y gnupg ca-certificates wget

# Install MongoDB tools directly from MongoDB's managed repo so that the exact
# desired version can be gotten.
RUN wget -qO - https://www.mongodb.org/static/pgp/server-4.2.asc | \
    apt-key add -
RUN echo "deb [ arch=amd64 ] https://repo.mongodb.org/apt/ubuntu bionic/\
mongodb-org/4.2 multiverse" | tee /etc/apt/sources.list.d/mongodb-org-4.2.list
RUN apt-get update && apt-get install -y mongodb-org-tools=4.2.0

ENV SCRIPTS_DIR /run_files
ENV BACKUPS_DIR /backups
VOLUME ["$BACKUPS_DIR"]

# Can be overriden at run time to use a different schedule.
ENV DB_BACKUP_CRON_SCHEDULE "0 0 * * *"

ENV DB_BACKUP_SCRIPT $SCRIPTS_DIR/mongo_backup.sh
ENV DB_BACKUP_RUN_SCRIPT $SCRIPTS_DIR/run_mongo_backup.sh

# Intentionally insert the DB_BACKUP_CRON_SCHEDULE env variable name and not
# its value into the cron file so that the cron schedule can be swapped in for
# it at run time.
RUN echo "DB_BACKUP_CRON_SCHEDULE root $DB_BACKUP_RUN_SCRIPT" >> $CRON_FILE


FROM base AS dev

# Volume for sharing in development run files on host with container
VOLUME ["$SCRIPTS_DIR"]


FROM base AS prod

COPY ./docker/mongobackup/mongo_backup.sh $DB_BACKUP_SCRIPT
COPY ./docker/mongobackup/run_mongo_backup.sh $DB_BACKUP_RUN_SCRIPT
RUN chmod +x $DB_BACKUP_RUN_SCRIPT
