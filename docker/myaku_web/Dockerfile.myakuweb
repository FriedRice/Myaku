# Builds a prod or dev image for Myaku web.

FROM ubuntu:18.04 AS base

# Set up deadsnakes ppa for installing newer Python versions
RUN apt-get update \
    && apt-get install -y software-properties-common \
    && add-apt-repository ppa:deadsnakes/ppa \
    && apt-get update

# Install needed python packages + gettext-base for envsubst
RUN apt-get install -y python3.7 python3.7-dev python3-pip python3-gdbm \
    gettext-base

# Set python binary that should be used in the container
ENV PYTHON_BIN python3.7

# Get latest pip
RUN $PYTHON_BIN -m pip install -U pip

ENV MYAKUWEB_BASE_DIR /myakuweb
ENV MYAKUWEB_SRC_DIR $MYAKUWEB_BASE_DIR/src

COPY ./LICENSE $MYAKUWEB_SRC_DIR/

COPY ./requirements.txt $MYAKUWEB_SRC_DIR/
RUN $PYTHON_BIN -m pip install -r $MYAKUWEB_SRC_DIR/requirements.txt

ENV PYTHONPATH $PYTHONPATH:$MYAKUWEB_SRC_DIR
ENV MYAKU_SRC_DIR $MYAKUWEB_SRC_DIR/myaku
ENV DJANGO_SRC_DIR $MYAKUWEB_SRC_DIR/myakuweb
ENV SCRIPTS_DIR $MYAKUWEB_SRC_DIR/scripts

ENV MYAKUWEB_LOG_DIR /myakuweb/log
ENV MYAKU_LOG_DIR /myakuweb/log/myaku
VOLUME ["$MYAKUWEB_LOG_DIR"]

ENV PYTHONUNBUFFERED 1

ENV MYAKUWEB_STATIC_URL /static/

ENV UWSGI_PORT 3031
ENV RUN_UWSGI_SCRIPT $SCRIPTS_DIR/run_uwsgi.sh

ENTRYPOINT ["/bin/bash", "-c", "$RUN_UWSGI_SCRIPT"]

WORKDIR $DJANGO_SRC_DIR


FROM base AS dev

ENV DJANGO_DEBUG_MODE 1

# Volumes for sharing in development source on host with container
VOLUME ["$MYAKU_SRC_DIR"]
VOLUME ["$DJANGO_SRC_DIR"]
VOLUME ["$SCRIPTS_DIR"]


FROM base AS prod

ENV DJANGO_DEBUG_MODE 0

# Copy all source code into the container
COPY ./myaku $MYAKU_SRC_DIR
COPY ./myakuweb $DJANGO_SRC_DIR
COPY ./docker/myaku_web/run_uwsgi.sh $RUN_UWSGI_SCRIPT
COPY ./docker/myaku_web/myakuweb_uwsgi_template.ini $SCRIPTS_DIR/

RUN chmod +x $RUN_UWSGI_SCRIPT
