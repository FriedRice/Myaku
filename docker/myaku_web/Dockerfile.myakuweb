# Builds a prod or dev image for Myaku web.

FROM ubuntu:18.04 AS base

# Set up deadsnakes ppa for installing newer Python versions
RUN apt-get update \
    && apt-get install -y software-properties-common \
    && add-apt-repository ppa:deadsnakes/ppa \
    && apt-get update

# Break python packages install into two layers so that the first install layer
# can be shared with images that only install those packages.
RUN apt-get install -y python3.7 python3-pip
RUN apt-get install -y python3.7-dev python3.7-gdbm

# Set python binary that should be used in the container.
ENV PYTHON_BIN python3.7

# Install latest pip.
RUN $PYTHON_BIN -m pip install pip==19.2.3

# Install gettext-base for envsubst.
RUN apt-get install gettext-base

# Run everything in the container as a non-root user.
RUN groupadd -g 999 myakuweb \
    && useradd -r -u 999 -g myakuweb -d /home/myakuweb myakuweb
USER myakuweb
ENV PATH $PATH:/home/myakuweb/.local/bin

ENV MYAKUWEB_BASE_DIR /home/myakuweb
ENV MYAKUWEB_SRC_DIR $MYAKUWEB_BASE_DIR/src

COPY --chown=myakuweb:myakuweb ./LICENSE $MYAKUWEB_SRC_DIR/

# Need to install both myaku and myakuweb requirements for the web container.
COPY --chown=myakuweb:myakuweb ./myaku/requirements.txt \
    $MYAKUWEB_SRC_DIR/myaku_requirements.txt
RUN $PYTHON_BIN -m pip install --user \
    -r $MYAKUWEB_SRC_DIR/myaku_requirements.txt

COPY --chown=myakuweb:myakuweb ./myakuweb-apiserver/requirements.txt \
    $MYAKUWEB_SRC_DIR/myakuweb_requirements.txt
RUN $PYTHON_BIN -m pip install --user \
    -r $MYAKUWEB_SRC_DIR/myakuweb_requirements.txt

ENV PYTHONPATH $PYTHONPATH:$MYAKUWEB_SRC_DIR
ENV MYAKU_SRC_DIR $MYAKUWEB_SRC_DIR/myaku
ENV DJANGO_SRC_DIR $MYAKUWEB_SRC_DIR/myakuweb
ENV SCRIPTS_DIR $MYAKUWEB_SRC_DIR/scripts

ENV MYAKUWEB_LOG_DIR $MYAKUWEB_BASE_DIR/log
ENV MYAKU_LOG_DIR $MYAKUWEB_LOG_DIR
RUN mkdir $MYAKUWEB_LOG_DIR
VOLUME ["$MYAKUWEB_LOG_DIR"]

ENV MYAKUWEB_STATIC_URL /static/

ENV UWSGI_PORT 3031
ENV RUN_UWSGI_SCRIPT $SCRIPTS_DIR/run_uwsgi.sh

ENTRYPOINT ["/bin/bash", "-c", "$RUN_UWSGI_SCRIPT"]

WORKDIR $DJANGO_SRC_DIR


FROM base AS prod

ENV DJANGO_DEBUG_MODE 0

# Copy all source code into the container
COPY --chown=myakuweb:myakuweb ./myaku $MYAKU_SRC_DIR
COPY --chown=myakuweb:myakuweb ./myakuweb-apiserver $DJANGO_SRC_DIR
COPY --chown=myakuweb:myakuweb \
    ./docker/myaku_web/run_uwsgi.sh $RUN_UWSGI_SCRIPT
COPY --chown=myakuweb:myakuweb \
    ./docker/myaku_web/myakuweb_uwsgi_template.ini $SCRIPTS_DIR/

RUN chmod +x $RUN_UWSGI_SCRIPT


FROM base AS dev

ENV DJANGO_DEBUG_MODE 1

# Install dev requirements like ipython only in the dev images so that the prod
# images don't contain them.
COPY --chown=myakuweb:myakuweb ./requirements.txt \
    $MYAKUWEB_SRC_DIR/dev_requirements.txt
RUN $PYTHON_BIN -m pip install --user \
    -r $MYAKUWEB_SRC_DIR/dev_requirements.txt

# Volumes for sharing in development source on host with container
VOLUME ["$MYAKU_SRC_DIR"]
VOLUME ["$DJANGO_SRC_DIR"]
VOLUME ["$SCRIPTS_DIR"]
